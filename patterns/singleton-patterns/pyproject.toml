[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "singleton-patterns"
dynamic = ["version"]
description = "Demonstration of singleton patterns in Python with pros/cons"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
  { name = "alek-ellegard", email = "alek-ellegard@caesari.se" },
]

[project.urls]
Source = "https://github.com/alek-ellegard/singleton-patterns"

[tool.hatch.version]
path = "src/singleton_patterns/__about__.py"

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.1",  # for parallel testing
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --tb=short --strict-markers"

[tool.coverage.run]
source_pkgs = ["singleton_patterns"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
